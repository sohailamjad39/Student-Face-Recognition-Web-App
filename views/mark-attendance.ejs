<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Mark Attendance - Admin Dashboard</title>
  <!-- Link to your CSS or Bootstrap -->
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
  <style>
    /* Light Theme Styles */
    body {
      background-color: #f8f9fa;
      color: #212529;
      transition: background-color 0.3s ease, color 0.3s ease;
    }
    .navbar {
      background-color: #ffffff !important;
      border-bottom: 1px solid #ddd;
    }
    .sidebar {
      background-color: #ffffff;
      border-right: 1px solid #ddd;
      transition: background-color 0.3s ease, color 0.3s ease;
    }
    .form-control {
      background-color: #ffffff;
      border-color: #ced4da;
      transition: background-color 0.3s ease, border-color 0.3s ease;
    }
    .btn-primary {
      background-color: #007bff;
      border-color: #007bff;
    }
    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }

    /* Dark Theme Styles */
    body.dark-mode {
      background-color: #121212;
      color: #e0e0e0;
    }
    body.dark-mode .navbar {
      background-color: #1e1e1e !important;
      border-bottom: 1px solid #333;
    }
    body.dark-mode .navbar-brand,
    body.dark-mode .nav-link {
      color: #e0e0e0 !important;
    }
    body.dark-mode .navbar-brand:hover,
    body.dark-mode .nav-link:hover {
      color: #ffffff !important;
    }
    body.dark-mode .sidebar {
      background-color: #1e1e1e !important;
      border-right: 1px solid #333;
    }
    body.dark-mode .sidebar .nav-link {
      color: #e0e0e0 !important;
    }
    body.dark-mode .sidebar .nav-link.active {
      color: #ffffff !important;
      background-color: rgba(30, 68, 255, 0.2) !important;
    }
    body.dark-mode .form-control {
      background-color: #2c2c2c;
      border-color: #444;
      color: #e0e0e0;
    }
    body.dark-mode .btn-primary {
      background-color: #1e88e5;
      border-color: #1e88e5;
    }
    body.dark-mode .btn-primary:hover {
      background-color: #1565c0;
      border-color: #1565c0;
    }
    body.dark-mode .alert-danger {
      background-color: #b00020;
      border-color: #b00020;
      color: #ffffff;
    }
    body.dark-mode .dropdown-menu {
      background-color: #1e1e1e;
      border-color: #333;
    }
    body.dark-mode .dropdown-item {
      color: #e0e0e0;
    }
    body.dark-mode .dropdown-item:hover {
      background-color: #333;
    }

    /* Switch Mode Button */
    .theme-switch {
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 60px;
      height: 30px;
      background-color: #ccc;
      border-radius: 15px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 5px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
      transition: background-color 0.3s ease;
    }
    .theme-switch.dark-mode {
      background-color: #1e88e5;
    }
    .theme-switch .switch-circle {
      width: 20px;
      height: 20px;
      background-color: white;
      border-radius: 50%;
      transition: transform 0.3s ease;
    }
    .theme-switch.dark-mode .switch-circle {
      transform: translateX(30px);
    }
  </style>
</head>
<body>
  <!-- HEADER -->
  <header class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="/admin/dashboard">MyProject Admin</a>
    <form class="form-inline my-2 my-lg-0 ml-auto">
      <input class="form-control mr-sm-2" type="search" placeholder="Search..." aria-label="Search">
      <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
    </form>
    <ul class="navbar-nav ml-3">
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-toggle="dropdown">
          <img src="/images/NUTECH_logo.png" alt="Admin Avatar" class="rounded-circle" width="30"> Admin
        </a>
        <div class="dropdown-menu dropdown-menu-right">
          <a class="dropdown-item" href="/admin/profile">Profile</a>
          <a class="dropdown-item" href="/admin/settings">Settings</a>
          <div class="dropdown-divider"></div>
          <a class="dropdown-item" href="/admin/logout">Logout</a>
        </div>
      </li>
    </ul>
  </header>
  <div class="container-fluid">
    <div class="row">
      <!-- SIDEBAR -->
      <nav class="col-md-2 d-none d-md-block bg-light sidebar">
        <div class="sidebar-sticky">
          <ul class="nav flex-column">
            <li class="nav-item">
              <a class="nav-link" href="/admin/dashboard">
                <i class="fa fa-home"></i> Dashboard
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link active" href="/admin/attendance" style="background-color: rgba(0, 68, 255, 0.1); border-radius: 5px;">
                <i class="fa fa-calendar-check"></i> Attendance
              </a>
            </li>
          </ul>
        </div>
      </nav>
      <!-- MAIN CONTENT -->
      <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
        <div class="pt-3 pb-2 mb-3 border-bottom">
          <h1 class="h2">Mark Attendance</h1>
        </div>
        <!-- Display Error Message (if any) -->
        <% if (error) { %>
        <div class="alert alert-danger" role="alert"><%= error %></div>
        <% } %>
        <!-- Mark Attendance Form -->
        <form action="/admin/attendance/mark" method="POST" id="attendanceForm">
          <div class="form-group">
            <label for="classId">Select Class</label>
            <select class="form-control" id="classId" name="classId" required>
              <option value="">-- Select a Class --</option>
              <% classes.forEach(cls => { %>
              <option value="<%= cls._id %>"><%= cls.className %></option>
              <% }); %>
            </select>
          </div>
          <div class="form-group">
            <label for="studentId">Select Student</label>
            <select class="form-control" id="studentId" name="studentId" required disabled>
              <option value="">-- Select a Student --</option>
            </select>
          </div>
          <div class="form-group">
            <label for="date">Date</label>
            <input type="date" class="form-control" id="date" name="date" required>
          </div>
          <div class="form-group">
            <label>Attendance Status</label>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="status" value="present" required>
              <label class="form-check-label">Present</label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="status" value="absent">
              <label class="form-check-label">Absent</label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="radio" name="status" value="onleave">
              <label class="form-check-label">On Leave</label>
            </div>
          </div>
          <button type="submit" class="btn btn-primary" id="submitButton" disabled>Save Attendance</button>
        </form>
      </main>
    </div>
  </div>

  <!-- Theme Switch Button -->
  <div class="theme-switch" id="themeSwitch">
    <div class="switch-circle"></div>
  </div>

  <!-- Optional: Include jQuery and Bootstrap JS -->
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
  <script>
    // Pre-fetch all students and classes
    const classes = <%- JSON.stringify(classes) %>;
    const students = <%- JSON.stringify(students) %>;

    document.getElementById('classId').addEventListener('change', function () {
      const classId = this.value;
      const studentDropdown = document.getElementById('studentId');
      const submitButton = document.getElementById('submitButton');

      if (!classId) {
        studentDropdown.innerHTML = '<option value="">-- Select a Student --</option>';
        studentDropdown.disabled = true;
        submitButton.disabled = true;
        return;
      }

      // Find the selected class
      const selectedClass = classes.find(cls => cls._id === classId);

      if (!selectedClass || !Array.isArray(selectedClass.students) || selectedClass.students.length === 0) {
        studentDropdown.innerHTML = '<option value="">-- No Students Found --</option>';
        studentDropdown.disabled = true;
        submitButton.disabled = true;
        return;
      }

      // Filter students based on the selected class
      const enrolledStudents = students.filter(student =>
        selectedClass.students.includes(student._id)
      );

      if (enrolledStudents.length > 0) {
        let options = '<option value="">-- Select a Student --</option>';
        enrolledStudents.forEach(student => {
          options += `<option value="${student._id}">${student.firstName} ${student.lastName}</option>`;
        });
        studentDropdown.innerHTML = options;
        studentDropdown.disabled = false;
        submitButton.disabled = false;
      } else {
        studentDropdown.innerHTML = '<option value="">-- No Students Found --</option>';
        studentDropdown.disabled = true;
        submitButton.disabled = true;
      }
    });

    document.getElementById('studentId').addEventListener('change', function () {
      const submitButton = document.getElementById('submitButton');
      submitButton.disabled = !this.value; // Enable button only if a student is selected
    });

    // Add client-side validation to prevent duplicate submissions
    document.getElementById('attendanceForm').addEventListener('submit', async function (event) {
      event.preventDefault(); // Prevent form submission

      const classId = document.getElementById('classId').value;
      const studentId = document.getElementById('studentId').value;
      const date = document.getElementById('date').value;

      if (!classId || !studentId || !date) {
        alert('Please fill in all fields.');
        return;
      }

      try {
        const response = await fetch('/api/attendance/check', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ classId, studentId, date }),
        });

        const result = await response.json();

        if (result.exists) {
          alert('Attendance has already been marked for this student on the selected date.');
          return;
        }

        // Submit the form if no duplicate attendance exists
        this.submit();
      } catch (error) {
        console.error('Error checking attendance:', error);
        alert('An error occurred while checking attendance.');
      }
    });

    // Theme Toggle Logic
    const themeSwitch = document.getElementById('themeSwitch');
    const body = document.body;

    // Check localStorage for theme preference
    const currentTheme = localStorage.getItem('theme');
    if (currentTheme === 'dark') {
      body.classList.add('dark-mode');
      themeSwitch.classList.add('dark-mode');
    }

    // Toggle theme on button click
    themeSwitch.addEventListener('click', () => {
      body.classList.toggle('dark-mode');
      themeSwitch.classList.toggle('dark-mode');

      // Save theme preference to localStorage
      if (body.classList.contains('dark-mode')) {
        localStorage.setItem('theme', 'dark');
      } else {
        localStorage.setItem('theme', 'light');
      }
    });
  </script>
</body>
</html>