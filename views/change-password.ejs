<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Change Password</title>
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
  <!-- Font Awesome Icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <!-- Custom Styles -->
  <style>
    /* Global Styles */
    body {
      background: #f4f6f9;
      color: #333;
      font-family: 'Arial', sans-serif;
      margin: 0;
      padding: 0;
      transition: background-color 0.3s ease, color 0.3s ease;
    }

    /* Dark Theme Styles */
    body.dark-mode {
      background-color: #121212;
      color: #e0e0e0;
    }
    body.dark-mode .navbar {
      background-color: #1e1e1e !important;
      border-bottom: 1px solid #333;
    }
    body.dark-mode .navbar-brand,
    body.dark-mode .nav-link {
      color: #e0e0e0 !important;
    }
    body.dark-mode .dashboard-container {
      background-color: #2c2c2c;
      color: #e0e0e0;
    }
    body.dark-mode label {
      color: #e0e0e0;
    }
    body.dark-mode .form-control {
      background-color: #383838;
      border-color: #444;
      color: #e0e0e0;
    }
    body.dark-mode .form-control:focus {
      border-color: #1e88e5;
      box-shadow: 0 0 5px rgba(30, 136, 229, 0.3);
    }
    body.dark-mode .password-hint {
      color: #888;
    }
    body.dark-mode .message-success {
      color: #4CAF50;
    }
    body.dark-mode .message-error {
      color: #f44336;
    }
    body.dark-mode .btn-custom {
      background-color: #1e88e5;
      color: #242424 !important;
    }
    body.dark-mode .btn-custom:hover {
      background-color: #1565c0;
    }

    /* Light Theme Styles */
    .navbar {
      background: #ffffff;
      border-bottom: 1px solid #ddd;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }
    .navbar-brand img {
      width: 40px;
      height: auto;
    }
    .navbar-nav .nav-link {
      color: #333 !important;
      font-weight: bold;
      transition: color 0.3s ease;
    }
    .navbar-nav .nav-link:hover {
      color: #007bff !important;
    }
    .dashboard-container {
      background: #ffffff;
      padding: 30px;
      border-radius: 15px;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
      margin: 20px auto;
      max-width: 600px;
      transition: background-color 0.3s ease;
    }
    h2 {
      color: #007bff;
      font-weight: bold;
    }
    label {
      color: #333;
    }
    .form-control {
      background-color: #f9fafb;
      border: 1px solid #ddd;
      color: #333;
      border-radius: 8px;
      padding: 10px;
      transition: border-color 0.3s ease;
    }
    .form-control:focus {
      border-color: #007bff;
      box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
    }
    .btn-custom {
      background-color: #007bff;
      border: none;
      color: #ffffff;
      padding: 12px 20px;
      border-radius: 8px;
      font-size: 1.2em;
      font-weight: bold;
      transition: background-color 0.3s ease;
      width: 100%;
      cursor: pointer;
    }
    .btn-custom:hover {
      background-color: #0056b3;
    }
    .message-success {
      color: #28a745;
      margin-bottom: 15px;
    }
    .message-error {
      color: #dc3545;
      margin-bottom: 15px;
    }
    .password-hint {
      font-size: 12px;
      color: #aaa;
      margin-top: 5px;
      margin-bottom: 10px;
      display: block;
    }
    .password-error {
      color: #dc3545;
      font-size: 12px;
      margin-top: -10px;
      margin-bottom: 5px;
      display: none;
    }

    /* Theme Switch */
    .theme-switch {
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 60px;
      height: 30px;
      background-color: #ccc;
      border-radius: 15px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 5px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
      transition: background-color 0.3s ease;
      z-index: 1000;
    }
    .theme-switch.dark-mode {
      background-color: #1e88e5;
    }
    .theme-switch .switch-circle {
      width: 20px;
      height: 20px;
      background-color: white;
      border-radius: 50%;
      transition: transform 0.3s ease;
    }
    .theme-switch.dark-mode .switch-circle {
      transform: translateX(30px);
    }

    /* Add Animations */
    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }
    .animated {
      animation: fadeIn 1s ease-in-out;
    }
  </style>
</head>
<body>
  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-light">
    <a class="navbar-brand" href="/student/dashboard">
      <img src="/images/student.png" alt="Student Logo">
    </a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav ml-auto">
        <li class="nav-item">
          <a class="nav-link" href="/student/notification"><i class="fas fa-bell"></i> Notifications</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/student/dashboard"><i class="fas fa-home"></i> Dashboard</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/student/profile/update"><i class="fas fa-user-circle"></i> Profile</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#" onclick="confirmLogout()"><i class="fas fa-sign-out-alt"></i> Logout</a>
        </li>
      </ul>
    </div>
  </nav>

  <!-- Change Password Content -->
  <div class="container dashboard-container animated">
    <h2>Change Password</h2>
    <!-- Success/Error Messages -->
    <% if (successMessage) { %>
      <div class="message-success"><%= successMessage %></div>
    <% } %>
    <% if (errorMessage) { %>
      <div class="message-error"><%= errorMessage %></div>
    <% } %>
    <!-- Change Password Form -->
    <form action="/student/changePass" method="POST" id="changePasswordForm">
      <div class="form-group">
        <label for="currentPassword">Current Password</label>
        <input
          type="password"
          class="form-control"
          id="currentPassword"
          name="currentPassword"
          required
        />
      </div>
      <div class="form-group">
        <label for="newPassword">New Password</label>
        <input
          type="password"
          class="form-control"
          id="newPassword"
          name="newPassword"
          required
        />
        <span class="password-hint">
          Password must be at least 8 characters long and contain at least one letter (uppercase or lowercase) and one number.
        </span>
        <span class="password-error" id="newPasswordError">
          Password does not meet the requirements.
        </span>
      </div>
      <div class="form-group">
        <label for="confirmPassword">Confirm New Password</label>
        <input
          type="password"
          class="form-control"
          id="confirmPassword"
          name="confirmPassword"
          required
        />
        <span class="password-error" id="confirmPasswordError" style="margin-top: 5px;">
          Passwords do not match.
        </span>
      </div>
      <button type="submit" class="btn btn-custom" id="submitButton">Change Password</button>
    </form>
  </div>

  <!-- Theme Switch Button -->
  <div class="theme-switch" id="themeSwitch">
    <div class="switch-circle"></div>
  </div>

  <!-- Optional: Include jQuery and Bootstrap JS -->
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
  <script>
    // Theme Toggle Logic
    const themeSwitch = document.getElementById('themeSwitch');
    const body = document.body;

    // Check localStorage for theme preference
    const currentTheme = localStorage.getItem('theme');
    if (currentTheme === 'dark') {
      body.classList.add('dark-mode');
      themeSwitch.classList.add('dark-mode');
    }

    // Toggle theme on button click
    themeSwitch.addEventListener('click', () => {
      body.classList.toggle('dark-mode');
      themeSwitch.classList.toggle('dark-mode');
      localStorage.setItem('theme', body.classList.contains('dark-mode') ? 'dark' : 'light');
    });

    // Confirm logout
    function confirmLogout() {
      if (confirm("Are you sure you want to log out?")) {
        window.location.href = "/student/logout";
      }
    }

    // Password validation logic
    const newPasswordInput = document.getElementById('newPassword');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const newPasswordError = document.getElementById('newPasswordError');
    const confirmPasswordError = document.getElementById('confirmPasswordError');
    const submitButton = document.getElementById('submitButton');

    function validatePassword(password) {
      const hasLetter = /[a-zA-Z]/.test(password);
      const hasNumber = /[0-9]/.test(password);
      const isLongEnough = password.length >= 8;
      return hasLetter && hasNumber && isLongEnough;
    }

    function validateConfirmPassword(newPassword, confirmPassword) {
      return newPassword === confirmPassword;
    }

    newPasswordInput.addEventListener('input', () => {
      if (!validatePassword(newPasswordInput.value)) {
        newPasswordError.style.display = 'block';
        submitButton.disabled = true;
      } else {
        newPasswordError.style.display = 'none';
        checkFormValidity();
      }
    });

    confirmPasswordInput.addEventListener('input', () => {
      if (!validateConfirmPassword(newPasswordInput.value, confirmPasswordInput.value)) {
        confirmPasswordError.style.display = 'block';
        submitButton.disabled = true;
      } else {
        confirmPasswordError.style.display = 'none';
        checkFormValidity();
      }
    });

    function checkFormValidity() {
      if (
        validatePassword(newPasswordInput.value) &&
        validateConfirmPassword(newPasswordInput.value, confirmPasswordInput.value)
      ) {
        submitButton.disabled = false;
      } else {
        submitButton.disabled = true;
      }
    }

    document.getElementById('changePasswordForm').addEventListener('submit', (e) => {
      if (
        !validatePassword(newPasswordInput.value) ||
        !validateConfirmPassword(newPasswordInput.value, confirmPasswordInput.value)
      ) {
        e.preventDefault();
        newPasswordError.style.display = !validatePassword(newPasswordInput.value) ? 'block' : 'none';
        confirmPasswordError.style.display = !validateConfirmPassword(newPasswordInput.value, confirmPasswordInput.value) ? 'block' : 'none';
      }
    });
  </script>
</body>
</html>